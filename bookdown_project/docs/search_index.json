[["index.html", "Linking Climate and Health Data 1 Preface 1.1 Introduction 1.2 Required Information", " Linking Climate and Health Data HEYA Research Group 1 Preface This work is supported by current and past members of the HEYA Research Group (www.heyaresearch.ca) Authors: Rebekah McKinnon PhD, Ishwar Tiwari PhD, Jayden Chang MSc, Jack McIlraith MSc, Gina Martin PhD Welcome to this bookdown project. You can track issues and tasks here: GitHub Project Board: View on GitHub 1.1 Introduction 1.1.1 Purpose 1.2 Required Information 1.2.1 Publically available datasets 1.2.2 R packages The following R packages are required to run the code in this book: Data processing and wrangling: - dplyr - tidyr - lubridate - data.table - tibble - readr - purrr - stringr - readxl - writexl Data visualization and mapping - ggplot2 - maps Spatial analysis - sf - geosphere Specialized tools - weathercan - furrr - tidyverse The following code installs (if needed) and loads these packages: # Vector of required packages packages &lt;- c( &quot;dplyr&quot;, &quot;tidyr&quot;, &quot;lubridate&quot;, &quot;data.table&quot;, &quot;tibble&quot;, &quot;readr&quot;, &quot;purrr&quot;, &quot;stringr&quot;, &quot;readxl&quot;, &quot;writexl&quot;, &quot;ggplot2&quot;, &quot;maps&quot;, &quot;sf&quot;, &quot;geosphere&quot;, &quot;weathercan&quot;, &quot;furrr&quot;, &quot;tidyverse&quot; ) # Install any that are missing installed &lt;- rownames(installed.packages()) to_install &lt;- setdiff(packages, installed) if (length(to_install) &gt; 0) { install.packages(to_install) } # Load all packages invisible(lapply(packages, library, character.only = TRUE)) ## ## Attaching package: &#39;dplyr&#39; ## The following objects are masked from &#39;package:stats&#39;: ## ## filter, lag ## The following objects are masked from &#39;package:base&#39;: ## ## intersect, setdiff, setequal, union ## ## Attaching package: &#39;lubridate&#39; ## The following objects are masked from &#39;package:base&#39;: ## ## date, intersect, setdiff, union ## Warning: package &#39;data.table&#39; was built under R version 4.4.3 ## ## Attaching package: &#39;data.table&#39; ## The following objects are masked from &#39;package:lubridate&#39;: ## ## hour, isoweek, mday, minute, month, quarter, second, wday, week, ## yday, year ## The following objects are masked from &#39;package:dplyr&#39;: ## ## between, first, last ## ## Attaching package: &#39;purrr&#39; ## The following object is masked from &#39;package:data.table&#39;: ## ## transpose ## Warning: package &#39;readxl&#39; was built under R version 4.4.3 ## Warning: package &#39;writexl&#39; was built under R version 4.4.3 ## Warning: package &#39;ggplot2&#39; was built under R version 4.4.3 ## ## Attaching package: &#39;maps&#39; ## The following object is masked from &#39;package:purrr&#39;: ## ## map ## Linking to GEOS 3.13.0, GDAL 3.10.1, PROJ 9.5.1; sf_use_s2() is TRUE ## As of v0.7.2, the `normals` column in `stations()` reflects whether or not there ## are *any* normals available (not just the most recent). ## Warning: package &#39;furrr&#39; was built under R version 4.4.3 ## Loading required package: future ## Warning: package &#39;future&#39; was built under R version 4.4.3 ## Warning: package &#39;tidyverse&#39; was built under R version 4.4.3 ## Warning: package &#39;forcats&#39; was built under R version 4.4.3 ## ── Attaching core tidyverse packages ─────────────────── tidyverse 2.0.0 ── ## ✔ forcats 1.0.0 ## ── Conflicts ───────────────────────────────────── tidyverse_conflicts() ── ## ✖ data.table::between() masks dplyr::between() ## ✖ dplyr::filter() masks stats::filter() ## ✖ data.table::first() masks dplyr::first() ## ✖ data.table::hour() masks lubridate::hour() ## ✖ data.table::isoweek() masks lubridate::isoweek() ## ✖ dplyr::lag() masks stats::lag() ## ✖ data.table::last() masks dplyr::last() ## ✖ maps::map() masks purrr::map() ## ✖ data.table::mday() masks lubridate::mday() ## ✖ data.table::minute() masks lubridate::minute() ## ✖ data.table::month() masks lubridate::month() ## ✖ data.table::quarter() masks lubridate::quarter() ## ✖ data.table::second() masks lubridate::second() ## ✖ purrr::transpose() masks data.table::transpose() ## ✖ data.table::wday() masks lubridate::wday() ## ✖ data.table::week() masks lubridate::week() ## ✖ data.table::yday() masks lubridate::yday() ## ✖ data.table::year() masks lubridate::year() ## ℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors "],["getting-started.html", "2 Getting Started with Spatial Data 2.1 Data Access 2.2 Data preparation", " 2 Getting Started with Spatial Data 2.1 Data Access 2.2 Data preparation 2.2.1 Terminology 2.2.2 Coordinate Reference Systems &amp; Projections "],["spatial-data.html", "3 Spatial Data", " 3 Spatial Data "],["locating-and-refining-environmental-data.html", "4 Locating &amp; Refining Environmental Data 4.1 Introduction 4.2 Wildfires", " 4 Locating &amp; Refining Environmental Data 4.1 Introduction 4.2 Wildfires 4.2.1 Data preparation with sf package We read the updated NBAC wildfire polygons (1972–2024) from the .shp file. Tip: Shapefiles are a set of files. Ensure the .shp, .shx, .dbf, and (ideally) .prj sit together in the same folder. poly_fires &lt;- st_read(&quot;C:/Users/rebek/Downloads/NBAC_1972to2024_20250506_shp/NBAC_1972to2024_20250506.shp&quot;) ## Reading layer `NBAC_1972to2024_20250506&#39; from data source ## `C:\\Users\\rebek\\Downloads\\NBAC_1972to2024_20250506_shp\\NBAC_1972to2024_20250506.shp&#39; ## using driver `ESRI Shapefile&#39; ## Simple feature collection with 50831 features and 21 fields ## Geometry type: MULTIPOLYGON ## Dimension: XY ## Bounding box: xmin: -2307185 ymin: -716411.6 xmax: 2981026 ymax: 2764441 ## Projected CRS: Canada_Lambert_Conformal_Conic names(poly_fires) ## [1] &quot;YEAR&quot; &quot;NFIREID&quot; &quot;BASRC&quot; &quot;FIREMAPS&quot; &quot;FIREMAPM&quot; ## [6] &quot;FIRECAUS&quot; &quot;HS_SDATE&quot; &quot;HS_EDATE&quot; &quot;AG_SDATE&quot; &quot;AG_EDATE&quot; ## [11] &quot;CAPDATE&quot; &quot;POLY_HA&quot; &quot;ADJ_HA&quot; &quot;ADJ_FLAG&quot; &quot;ADMIN_AREA&quot; ## [16] &quot;NATPARK&quot; &quot;PRESCRIBED&quot; &quot;VERSION&quot; &quot;GID&quot; &quot;Shape_Leng&quot; ## [21] &quot;Shape_Area&quot; &quot;geometry&quot; 4.2.2 Inspect &amp; refine data structure Check available columns and data types names(poly_fires) ## [1] &quot;YEAR&quot; &quot;NFIREID&quot; &quot;BASRC&quot; &quot;FIREMAPS&quot; &quot;FIREMAPM&quot; ## [6] &quot;FIRECAUS&quot; &quot;HS_SDATE&quot; &quot;HS_EDATE&quot; &quot;AG_SDATE&quot; &quot;AG_EDATE&quot; ## [11] &quot;CAPDATE&quot; &quot;POLY_HA&quot; &quot;ADJ_HA&quot; &quot;ADJ_FLAG&quot; &quot;ADMIN_AREA&quot; ## [16] &quot;NATPARK&quot; &quot;PRESCRIBED&quot; &quot;VERSION&quot; &quot;GID&quot; &quot;Shape_Leng&quot; ## [21] &quot;Shape_Area&quot; &quot;geometry&quot; str(poly_fires) ## Classes &#39;sf&#39; and &#39;data.frame&#39;: 50831 obs. of 22 variables: ## $ YEAR : num 2024 2024 2024 2024 2024 ... ## $ NFIREID : num 1 2 3 4 5 6 7 8 9 10 ... ## $ BASRC : chr &quot;MAFiMS&quot; &quot;MAFiMS&quot; &quot;MAFiMS&quot; &quot;MAFiMS&quot; ... ## $ FIREMAPS : chr &quot;Landsat&quot; &quot;Sentinel-2&quot; &quot;Sentinel-2&quot; &quot;Landsat&quot; ... ## $ FIREMAPM : chr &quot;Processed imagery&quot; &quot;Processed imagery&quot; &quot;Processed imagery&quot; &quot;Processed imagery&quot; ... ## $ FIRECAUS : chr &quot;Natural&quot; &quot;Natural&quot; &quot;Natural&quot; &quot;Natural&quot; ... ## $ HS_SDATE : Date, format: &quot;2024-08-12&quot; &quot;2024-06-29&quot; ... ## $ HS_EDATE : Date, format: &quot;2024-09-02&quot; &quot;2024-08-12&quot; ... ## $ AG_SDATE : Date, format: &quot;2024-07-29&quot; &quot;2024-06-28&quot; ... ## $ AG_EDATE : Date, format: &quot;2024-10-04&quot; &quot;2024-10-04&quot; ... ## $ CAPDATE : Date, format: &quot;2024-09-15&quot; &quot;2024-08-22&quot; ... ## $ POLY_HA : num 625.3 185.7 1188.9 3862.6 26.6 ... ## $ ADJ_HA : num 625.3 185.7 1188.9 3862.6 26.6 ... ## $ ADJ_FLAG : chr NA NA NA NA ... ## $ ADMIN_AREA: chr &quot;NT&quot; &quot;NT&quot; &quot;NT&quot; &quot;NT&quot; ... ## $ NATPARK : chr NA NA NA NA ... ## $ PRESCRIBED: chr NA NA NA NA ... ## $ VERSION : chr &quot;20250506&quot; &quot;20250506&quot; &quot;20250506&quot; &quot;20250506&quot; ... ## $ GID : chr &quot;2024_1&quot; &quot;2024_2&quot; &quot;2024_3&quot; &quot;2024_4&quot; ... ## $ Shape_Leng: num 38513 16858 51547 132692 2833 ... ## $ Shape_Area: num 5906397 1754145 11207901 36408742 250725 ... ## $ geometry :sfc_MULTIPOLYGON of length 50831; first list element: List of 1 ## ..$ :List of 4 ## .. ..$ : num [1:956, 1:2] -1120514 -1120641 -1120656 -1120665 -1120665 ... ## .. ..$ : num [1:21, 1:2] -1120364 -1120354 -1120361 -1120352 -1120326 ... ## .. ..$ : num [1:11, 1:2] -1121905 -1121888 -1121866 -1121824 -1121817 ... ## .. ..$ : num [1:16, 1:2] -1121121 -1121111 -1121061 -1121045 -1121032 ... ## ..- attr(*, &quot;class&quot;)= chr [1:3] &quot;XY&quot; &quot;MULTIPOLYGON&quot; &quot;sfg&quot; ## - attr(*, &quot;sf_column&quot;)= chr &quot;geometry&quot; ## - attr(*, &quot;agr&quot;)= Factor w/ 3 levels &quot;constant&quot;,&quot;aggregate&quot;,..: NA NA NA NA NA NA NA NA NA NA ... ## ..- attr(*, &quot;names&quot;)= chr [1:21] &quot;YEAR&quot; &quot;NFIREID&quot; &quot;BASRC&quot; &quot;FIREMAPS&quot; ... Normalise column names names(poly_fires) &lt;- tolower(names(poly_fires)) names(poly_fires) ## [1] &quot;year&quot; &quot;nfireid&quot; &quot;basrc&quot; &quot;firemaps&quot; &quot;firemapm&quot; ## [6] &quot;firecaus&quot; &quot;hs_sdate&quot; &quot;hs_edate&quot; &quot;ag_sdate&quot; &quot;ag_edate&quot; ## [11] &quot;capdate&quot; &quot;poly_ha&quot; &quot;adj_ha&quot; &quot;adj_flag&quot; &quot;admin_area&quot; ## [16] &quot;natpark&quot; &quot;prescribed&quot; &quot;version&quot; &quot;gid&quot; &quot;shape_leng&quot; ## [21] &quot;shape_area&quot; &quot;geometry&quot; Given the extremely large size, it’s best to reduce the dataset to include only the years you require poly_fires &lt;- poly_fires %&gt;% filter(year &gt;= 2010) Limit dataset to only the columns you require poly_fires &lt;- select(poly_fires, nfireid, basrc, year, ag_sdate, # start date as date format ag_edate, # end date as date format poly_ha, admin_area, geometry) head(poly_fires) ## Simple feature collection with 6 features and 7 fields ## Geometry type: MULTIPOLYGON ## Dimension: XY ## Bounding box: xmin: -1246508 ymin: 1397449 xmax: -844340.2 ymax: 1459866 ## Projected CRS: Canada_Lambert_Conformal_Conic ## nfireid basrc year ag_sdate ag_edate poly_ha admin_area ## 1 1 MAFiMS 2024 2024-07-29 2024-10-04 625.25831 NT ## 2 2 MAFiMS 2024 2024-06-28 2024-10-04 185.71593 NT ## 3 3 MAFiMS 2024 2024-07-17 2024-10-04 1188.87817 NT ## 4 4 MAFiMS 2024 2024-07-17 2024-10-04 3862.62690 NT ## 5 5 MAFiMS 2024 2024-07-31 2024-10-04 26.55261 NT ## 6 6 MAFiMS 2024 2024-07-19 2024-10-04 28.82723 NT ## geometry ## 1 MULTIPOLYGON (((-1120514 14... ## 2 MULTIPOLYGON (((-1245606 14... ## 3 MULTIPOLYGON (((-846230.9 1... ## 4 MULTIPOLYGON (((-869281.6 1... ## 5 MULTIPOLYGON (((-1229068 14... ## 6 MULTIPOLYGON (((-1225697 14... Rename columns to align better with your spatial datasets poly_fires &lt;- poly_fires %&gt;% mutate( start_day = day(ag_sdate), start_month = month(ag_sdate), start_year = year(ag_sdate), end_day = day(ag_edate), end_month = month(ag_edate), end_year = year(ag_edate), start_date = ag_sdate, end_date = ag_edate, size = poly_ha) %&gt;% select(-poly_ha) # remove the original poly_ha column names(poly_fires) ## [1] &quot;nfireid&quot; &quot;basrc&quot; &quot;year&quot; &quot;ag_sdate&quot; &quot;ag_edate&quot; ## [6] &quot;admin_area&quot; &quot;start_day&quot; &quot;start_month&quot; &quot;start_year&quot; &quot;end_day&quot; ## [11] &quot;end_month&quot; &quot;end_year&quot; &quot;start_date&quot; &quot;end_date&quot; &quot;size&quot; ## [16] &quot;geometry&quot; str(poly_fires) ## Classes &#39;sf&#39; and &#39;data.frame&#39;: 22220 obs. of 16 variables: ## $ nfireid : num 1 2 3 4 5 6 7 8 9 10 ... ## $ basrc : chr &quot;MAFiMS&quot; &quot;MAFiMS&quot; &quot;MAFiMS&quot; &quot;MAFiMS&quot; ... ## $ year : num 2024 2024 2024 2024 2024 ... ## $ ag_sdate : Date, format: &quot;2024-07-29&quot; &quot;2024-06-28&quot; ... ## $ ag_edate : Date, format: &quot;2024-10-04&quot; &quot;2024-10-04&quot; ... ## $ admin_area : chr &quot;NT&quot; &quot;NT&quot; &quot;NT&quot; &quot;NT&quot; ... ## $ start_day : int 29 28 17 17 31 19 23 18 18 21 ... ## $ start_month: int 7 6 7 7 7 7 5 7 7 6 ... ## $ start_year : int 2024 2024 2024 2024 2024 2024 2024 2024 2024 2024 ... ## $ end_day : int 4 4 4 4 4 4 4 17 17 14 ... ## $ end_month : int 10 10 10 10 10 10 10 9 9 7 ... ## $ end_year : int 2024 2024 2024 2024 2024 2024 2024 2024 2024 2024 ... ## $ start_date : Date, format: &quot;2024-07-29&quot; &quot;2024-06-28&quot; ... ## $ end_date : Date, format: &quot;2024-10-04&quot; &quot;2024-10-04&quot; ... ## $ size : num 625.3 185.7 1188.9 3862.6 26.6 ... ## $ geometry :sfc_MULTIPOLYGON of length 22220; first list element: List of 1 ## ..$ :List of 4 ## .. ..$ : num [1:956, 1:2] -1120514 -1120641 -1120656 -1120665 -1120665 ... ## .. ..$ : num [1:21, 1:2] -1120364 -1120354 -1120361 -1120352 -1120326 ... ## .. ..$ : num [1:11, 1:2] -1121905 -1121888 -1121866 -1121824 -1121817 ... ## .. ..$ : num [1:16, 1:2] -1121121 -1121111 -1121061 -1121045 -1121032 ... ## ..- attr(*, &quot;class&quot;)= chr [1:3] &quot;XY&quot; &quot;MULTIPOLYGON&quot; &quot;sfg&quot; ## - attr(*, &quot;sf_column&quot;)= chr &quot;geometry&quot; ## - attr(*, &quot;agr&quot;)= Factor w/ 3 levels &quot;constant&quot;,&quot;aggregate&quot;,..: NA NA NA NA NA NA NA NA NA NA ... ## ..- attr(*, &quot;names&quot;)= chr [1:15] &quot;nfireid&quot; &quot;basrc&quot; &quot;year&quot; &quot;ag_sdate&quot; ... You may also want to save this newly formed dataset for easier future loading (i.e., to avoid the need to reload the shapefile during your next R session) write.csv(poly_fires, &quot;wildfire_data.csv&quot;, row.names = FALSE) "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
